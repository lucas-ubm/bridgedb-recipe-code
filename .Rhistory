if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ArrayExpress")
browseVignettes("ArrayExpress")
rawset = ArrayExpress("5500994173212120213068_A01")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ArrayExpress")
source("http://bioconductor.org/biocLite.R")
biocLite()
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
BiocManager::valid()
BiocManager::version()
BiocManager::install("ArrayExpress")
rawset = ArrayExpress("5500994173212120213068_A01")
browseVignettes("ArrayExpress")
rawset = try(ArrayExpress("5500994173212120213068_A01"))
BiocManager::install("ArrayExpress")
BiocManager::install("ArrayExpress")
rawset = ArrayExpress("5500994173212120213068_A01")
BiocManager::install("ArrayExpress")
BiocManager::install("ArrayExpress")
BiocManager::install("ArrayExpress")
BiocManager::install("ArrayExpress")
BiocManager::install("ArrayExpress")
BiocManager::install("ArrayExpress")
BiocManager::install("ArrayExpress")
BiocManager::install("ArrayExpress")
rawset = ArrayExpress("5500994173212120213068_A01")
BiocManager::install("ArrayExpress")
rawset = ArrayExpress("5500994173212120213068_A01")
> library("ArrayExpress")
library("ArrayExpress")
sets = queryAE(keywords = "pneumonia", species = "homo+sapiens")
installed.packages("dplyr")
library("ArrayExpress")
install.packages("rlang")
library("ArrayExpress")
install.packages("digest")
library("ArrayExpress")
library("ArrayExpress")
install.packages("digest")
install.packages("digest", dependencies = TRUE)
install.packages("digest", dependencies = TRUE)
library("ArrayExpress")
sets = queryAE(keywords = "pneumonia", species = "homo+sapiens")
View(sets)
View(sets)
library("BridgeDbR")
library("tidyverse")
library("BridgeDbR")
library("tidyverse")
ls
read_tsv('data/case1-example.tsv')
setwd("~/Documents/Serious/Work/FAIRplus/Code/identifier-mapping/python-mapping")
read_tsv('data/case1-example.tsv')
data_df <- read_tsv('data/case1-example.tsv')
data_df <- read_tsv('data/case1-example.tsv', col_names=c('indentifier))
data_df <- read_tsv('data/case1-example.tsv', col_names=c('indentifier'))
data_df <- read_tsv('data/case1-example.tsv', col_names=c('indentifier'))
data_df
data_df <- read_tsv('data/case1-example.tsv', col_names=c('indentifier'))
data_df$source = 'H
data_df <- read_tsv('data/case1-example.tsv', col_names=c('indentifier'))
data_df$source = 'H'
location <- getDataBase('Homo sapiens')
location <- getDatabase('Homo sapiens')
options(timeout=300)
location <- getDatabase('Homo sapiens')
mapper <- loadDataBase(location)
options(timeout=300)
location <- getDatabase('Homo sapiens')
mapper <- loadDatabase(location)
mapping = maps(mapper, data_df, target='En')
mapping = maps(mapper, data_df, target='En')
mapping = maps(mapper, data_df, target='En')
mapping = maps(mapper, data_df, target='En')
mapping = maps(mapper, data_df, target='En')
data_df
library("BridgeDbR")
library("tidyverse")
data_df <- read_tsv('data/case1-example.tsv', col_names=c('indentifier'))
data_df$source = 'H'
options(timeout=300)
location <- getDatabase('Homo sapiens')
mapper <- loadDatabase(location)
mapping = maps(mapper, data_df, target='En')
get_mappings <- function(filepath, organism, source, target='') {
# filepath indicates the path to the file containing the identifiers to be mapped
# organism is the organism these identifiers are describing
# source is the system code for the data source of the identifiers
# target is an optional parameter indicating the data source to which we are mapping
data_df <- read_tsv(filepath, col_names=FALSE)
if (dim(data_df)[2] == 1){
colnames(data_df) <- c('identifier')
} else {
colnames(data_df) <- c('local', 'identifier')
}
data_df$source = source
location <- getDatabase(organism)
mapper <- loadDatabase(location)
if (nchar(target) == 0) {
mapping = maps(mapper, data_df)
}
else{
mapping = maps(mapper, data_df, target=target)
}
return(right_join(data_df, mapping))
}
get_mappings('data/case1-example.tsv', 'Homo sapiens', 'H')
mapping = maps(mapper, data_df)
mapping = maps(mapper, data_df)
mapping = map(mapper, data_df)
mapping = maps(mapper, data_df)
library("BridgeDbR")
library("tidyverse")
options(timeout=300)
location <- getDatabase('Homo sapiens')
mapper <- loadDatabase(location)
mapping = maps(mapper, data_df)
maps(mapper, data_df)
maps(mapper, data_df)
data_df
mapper
data_df <- read_tsv('data/case1-example.tsv', col_names=c('identifier'))
mapper <- loadDatabase(location)
options(timeout=300)
location <- getDatabase('Homo sapiens')
mapper <- loadDatabase(location)
mapping = maps(mapper, data_df)
mapping = maps(mapper, data_df)
data_df
data_df <- read_tsv('data/case1-example.tsv', col_names=c('identifier'))
data_df$source = 'H'
data_df <- read_tsv('data/case1-example.tsv', col_names=c('identifier'))
mapping = maps(mapper, data_df)
data_df
data_df$source = 'H'
mapping = maps(mapper, data_df)
mapping
mapping = maps(mapper, data_df)
mapping = maps(mapper, data_df)
mapping = maps(mapper, data_df)
library("BridgeDbR")
library("tidyverse")
data_df <- read_tsv('data/case1-example.tsv', col_names=c('identifier'))
data_df$source = 'H'
data_df
options(timeout=300)
location <- getDatabase('Homo sapiens')
mapper <- loadDatabase(location)
mapping = maps(mapper, data_df)
options(timeout=300)
location <- getDatabase('Homo sapiens')
mapper <- loadDatabase(location)
mapping = maps(mapper, data_df)
mapping
maps(mapper, data_df, target='En)
maps(mapper, data_df, target='En')
maps(mapper, data_df, target='En')
data_df <- read_tsv('data/case2-example.tsv', col_names=c('local', 'identifier'))
data_df$source = 'H'
data_df
mapping = maps(mapper, data_df, target='En')
mapping
right_join(data_df, mapping)
